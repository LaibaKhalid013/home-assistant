# serializer version: 1
# name: test_controlling_state_via_mqtt[sensor_config0-entity_ids0-messages0-states0]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Tasmota DHT11 Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_dht11_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config0-entity_ids0-messages0-states0].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_dht11_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'DHT11 Temperature',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_DHT11_Temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config1-entity_ids1-messages1-states1]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Tasmota TX23 Speed Act',
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_tx23_speed_act',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config1-entity_ids1-messages1-states1].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_tx23_speed_act',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'TX23 Speed Act',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_TX23_Speed_Act',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config1-entity_ids1-messages1-states1].2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Tasmota TX23 Dir Card',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_tx23_dir_card',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config1-entity_ids1-messages1-states1].3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_tx23_dir_card',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'TX23 Dir Card',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_TX23_Dir_Card',
    'unit_of_measurement': None,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config2-entity_ids2-messages2-states2]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Tasmota ENERGY TotalTariff 0',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_energy_totaltariff_0',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config2-entity_ids2-messages2-states2].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_energy_totaltariff_0',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ENERGY TotalTariff 0',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ENERGY_TotalTariff_0',
    'unit_of_measurement': None,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config2-entity_ids2-messages2-states2].2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Tasmota ENERGY TotalTariff 1',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_energy_totaltariff_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config2-entity_ids2-messages2-states2].3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_energy_totaltariff_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ENERGY TotalTariff 1',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ENERGY_TotalTariff_1',
    'unit_of_measurement': None,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config3-entity_ids3-messages3-states3]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Tasmota DS18B20 Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_ds18b20_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config3-entity_ids3-messages3-states3].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_ds18b20_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'DS18B20 Temperature',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_DS18B20_Temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config3-entity_ids3-messages3-states3].2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Tasmota DS18B20 Id',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_ds18b20_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config3-entity_ids3-messages3-states3].3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_ds18b20_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DS18B20 Id',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_DS18B20_Id',
    'unit_of_measurement': None,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config4-entity_ids4-messages4-states4]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Tasmota ENERGY Total',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_energy_total',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config4-entity_ids4-messages4-states4].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_energy_total',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'ENERGY Total',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ENERGY_Total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config5-entity_ids5-messages5-states5]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Tasmota ENERGY Total 0',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_energy_total_0',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config5-entity_ids5-messages5-states5].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_energy_total_0',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'ENERGY Total 0',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ENERGY_Total_0',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config5-entity_ids5-messages5-states5].2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Tasmota ENERGY Total 1',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_energy_total_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config5-entity_ids5-messages5-states5].3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_energy_total_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'ENERGY Total 1',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ENERGY_Total_1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config6-entity_ids6-messages6-states6]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Tasmota ENERGY Total Phase1',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_energy_total_phase1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config6-entity_ids6-messages6-states6].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_energy_total_phase1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'ENERGY Total Phase1',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ENERGY_Total_Phase1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config6-entity_ids6-messages6-states6].2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Tasmota ENERGY Total Phase2',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_energy_total_phase2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config6-entity_ids6-messages6-states6].3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_energy_total_phase2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'ENERGY Total Phase2',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ENERGY_Total_Phase2',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config7-entity_ids7-messages7-states7]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Tasmota ANALOG Temperature1',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_analog_temperature1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config7-entity_ids7-messages7-states7].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_analog_temperature1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'ANALOG Temperature1',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ANALOG_Temperature1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config7-entity_ids7-messages7-states7].2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Tasmota ANALOG Temperature2',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_analog_temperature2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config7-entity_ids7-messages7-states7].3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_analog_temperature2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'ANALOG Temperature2',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ANALOG_Temperature2',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config7-entity_ids7-messages7-states7].4
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'illuminance',
      'friendly_name': 'Tasmota ANALOG Illuminance3',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'lx',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_analog_illuminance3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config7-entity_ids7-messages7-states7].5
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_analog_illuminance3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ILLUMINANCE: 'illuminance'>,
    'original_icon': None,
    'original_name': 'ANALOG Illuminance3',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ANALOG_Illuminance3',
    'unit_of_measurement': 'lx',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Tasmota ANALOG CTEnergy1 Energy',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'ANALOG CTEnergy1 Energy',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ANALOG_CTEnergy1_Energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8].2
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Tasmota ANALOG CTEnergy1 Power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8].3
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'ANALOG CTEnergy1 Power',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ANALOG_CTEnergy1_Power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8].4
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Tasmota ANALOG CTEnergy1 Voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8].5
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'ANALOG CTEnergy1 Voltage',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ANALOG_CTEnergy1_Voltage',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8].6
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'Tasmota ANALOG CTEnergy1 Current',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_current',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_controlling_state_via_mqtt[sensor_config8-entity_ids8-messages8-states8].7
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tasmota_analog_ctenergy1_current',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': None,
    'original_name': 'ANALOG CTEnergy1 Current',
    'platform': 'tasmota',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '00000049A3BC_sensor_sensor_ANALOG_CTEnergy1_Current',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
